# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint 
            
  deploy-infrastructure:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
            
      - run:
          name: CHECK VERSIONS
          command: |
            echo "checking versions on this image"
            ls -l /usr/local/bin/
            pwd
            ls -l
            whoami
            kubectl version --client
            eksctl version
            echo "Current cluster looks like this"
            eksctl get cluster --name house-demo --region=us-east-2
            echo "deploy a new cluster and deploy new container to it..."
          # eksctl create cluster --name house-cap --nodes=2 --node-type t3.medium
          # echo "give me the progress...."
          # eksctl utils describe-stacks --region=us-west-2 --cluster=house-cap
          # echo "get the cluster name using esctl"
          # eksctl get cluster --name house-cap --region=us-west-2
          # echo "use kubectl to interact"
          # kubectl get nodes
            
  configure-infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["fa:08:89:02:8b:4b:c0:5f:5f:ff:b7:7c:ad:99:82:61"]
      #- attach_workspace:
      #    at: /tmp
      - run:
          name: Install dependencies
          command: |
            apk add --update ansible
      - run:
          name: Configure server using Ansible 'configure-server.yml'
          command: |
          #cat /tmp/inventory.txt
            cd .circleci/ansible
            ansible-playbook -i 35.168.59.203 configure-server.yml
            
workflows:
  default:
    jobs:
      - deploy-infrastructure
      - build:
          requires: [deploy-infrastructure]
      - configure-infrastructure:
          requires: [build]